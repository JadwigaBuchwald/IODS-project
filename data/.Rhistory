human_ <- filter(human, complete.cases(human))
human_
#4###############################################
# human without NA is available
# look at the last 10 observations of human
tail(human,n=10)
# define the last indice we want to keep
last <- nrow(human) - 7
# choose everything until the last 7 observations
human_ <- human[1:last, ]
# add countries as rownames
rownames(human_) <- human_$Country
#5###################################################
# modified human, dplyr and the corrplot functions are available
# remove the Country variable
human_ <- select(human, -Country)
# Access GGally
library(GGally)
# visualize the 'human_' variables
ggpairs(human_)
# compute the correlation matrix and visualize it with corrplot
cor(human_)%>%corrplot()
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
# look at the (column) names of human
names(human)
# look at the structure of human
str(human)
# print out summaries of the variables
summary(human)
#2##########################
# tidyr package and human are available
# access the stringr package
library(stringr)
# look at the structure of the GNI column in 'human'
str(human$GNI)
# remove the commas from GNI and print out a numeric version of it
human$GNI<-str_replace(human$GNI, pattern=",", replace ="")%>%as.numeric()
str(human$GNI)
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
# select the 'keep' columns
human <- select(human, one_of(keep))
# print out a completeness indicator of the 'human' data
complete.cases(human)
# print out the data along with a completeness indicator as the last column
data.frame(human[-1], comp = complete.cases(human))
# filter out all rows with NA values
human_ <- filter(human, complete.cases(human))
human_
complete.cases(human)
View(human)
data.frame(human[-1], comp = complete.cases(human))
human<-data.frame(human[-1], comp = complete.cases(human))
human_ <- filter(human, complete.cases(human))
human_ <- as.data.frame(filter(human, complete.cases(human)))
human_
complete.cases(human)
library(dplyr)
#22.2.2017
library(dplyr)
#1###########################
# read the human data
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
# look at the (column) names of human
names(human)
# look at the structure of human
str(human)
# print out summaries of the variables
summary(human)
#2##########################
# tidyr package and human are available
# access the stringr package
library(stringr)
# look at the structure of the GNI column in 'human'
str(human$GNI)
# remove the commas from GNI and print out a numeric version of it
human$GNI<-str_replace(human$GNI, pattern=",", replace ="")%>%as.numeric()
str(human$GNI)
#3##############################
# human with modified GNI and dplyr are available
# columns to keep
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
# select the 'keep' columns
human <- select(human, one_of(keep))
# print out a completeness indicator of the 'human' data
complete.cases(human)
# print out the data along with a completeness indicator as the last column
human<-data.frame(human[-1], comp = complete.cases(human))
# filter out all rows with NA values
human_ <- filter(human, complete.cases(human))
human_
View(human)
View(human)
human<-filter(human,complete.cases(human))
View(human)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
# look at the (column) names of human
names(human)
# look at the structure of human
str(human)
# print out summaries of the variables
summary(human)
#2##########################
# tidyr package and human are available
# access the stringr package
library(stringr)
# look at the structure of the GNI column in 'human'
str(human$GNI)
# remove the commas from GNI and print out a numeric version of it
human$GNI<-str_replace(human$GNI, pattern=",", replace ="")%>%as.numeric()
str(human$GNI)
#3##############################
# human with modified GNI and dplyr are available
# columns to keep
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
# select the 'keep' columns
human <- select(human, one_of(keep))
# print out a completeness indicator of the 'human' data
complete.cases(human)
# print out the data along with a completeness indicator as the last column
data.frame(human[-1], comp = complete.cases(human))
# filter out all rows with NA values
human_ <- filter(human, complete.cases(human))
human_
#4###############################################
# human without NA is available
# look at the last 10 observations of human
tail(human,n=10)
# define the last indice we want to keep
last <- nrow(human) - 7
# choose everything until the last 7 observations
human_ <- human[1:last, ]
# add countries as rownames
rownames(human_) <- human_$Country
#5###################################################
# modified human, dplyr and the corrplot functions are available
human<-filter(human,complete.cases(human))
View(human)
View(human_)
rownames(human)<-human$Country
human_ <- select(human, -Country)
library(GGally)
ggpairs(human_)
cor(human_)%>%corrplot()
library(corrplot)
cor(human_)%>%corrplot()
library(FactoMineR)
library(ggplot2)
library(tidyr)
# column names to keep in the dataset
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch")
# select the 'keep_columns' to create a new dataset
tea_time <- select(tea, one_of(keep_columns))
# look at the summaries and structure of the data
summary(tea_time)
str(tea_time)
# visualize the dataset
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") +geom_bar() +theme(axis.text.x=element_text(angle=45,hjust=1,size=8))
install.packages("FactoMineR")
library(FactoMineR)
install.packages("tidyr")
library(tidyr)
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch")
# select the 'keep_columns' to create a new dataset
tea_time <- select(tea, one_of(keep_columns))
# look at the summaries and structure of the data
summary(tea_time)
str(tea_time)
# visualize the dataset
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") +geom_bar() +theme(axis.text.x=element_text(angle=45,hjust=1,size=8))
summary(tea)
library(FactoMineR)
summary(tea)
data(tea)
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch")
# select the 'keep_columns' to create a new dataset
tea_time <- select(tea, one_of(keep_columns))
# look at the summaries and structure of the data
summary(tea_time)
str(tea_time)
# visualize the dataset
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") +geom_bar() +theme(axis.text.x=element_text(angle=45,hjust=1,size=8))
# multiple correspondence analysis
mca <- MCA(tea_time, graph = FALSE)
# summary of the model
summary(mca)
# visualize MCA
plot(mca, invisible=c("ind"),habillage="quali")
View(human)
setwd("C:/HY-Data/JADWIGAB/PhD_FIMM/NotesOutsideTheOffice/Courses/OpenData2017/For_IODS/IODS-project/data")
human<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
dim(human)
View(human)
head(human)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
### Explore the dimensions and stucture of the data
dim(hd); dim(gii) #both have 195 observations, hd has 8 variables and gii 10.
names(hd); names(gii) #Different variable names , but the linking variable seems to be Country
str(hd); str(gii) #mainly numeric variables
summary(hd);summary(gii) #all variables on different scales and some missing values
#Renaming the variables
names(hd)<-c("HDI.Rank","Country","HDI","Life.Exp","Eduyears.Exp", "EduAt.Mean","GNI","GNIminusHDI.Rank")
names(gii)<-c("GII.Rank","Country","Gender.Ineq.I","Mat.Mort.I","Adol.Birth.R", "Parl.Rep.Prcnt","Sec.Edu.F","Sec.Edu.M","LabourForce.F","LabourForce.M")
#Two new variables to gii
#The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M).
#The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM).
gii$Sec.Edu.R<-with(gii,Sec.Edu.F/Sec.Edu.M)
gii$LabourForce.R<-with(gii,LabourForce.F/LabourForce.M)
summary(gii) #looks right
### Merging the above datasets making sure we only keep countries present in both data sets (all.x=F)
human<-merge(hd,gii,by="Country", all.x=F)
dim(human) #195 rows and 19 columns
human<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
### Explore the dimensions and stucture of the data
dim(hd); dim(gii) #both have 195 observations, hd has 8 variables and gii 10.
names(hd); names(gii) #Different variable names , but the linking variable seems to be Country
str(hd); str(gii) #mainly numeric variables
summary(hd);summary(gii) #all variables on different scales and some missing values
#Renaming the variables
names(hd)<-c("HDI.Rank","Country","HDI","Life.Exp","Eduyears.Exp", "EduAt.Mean","GNI","GNIminusHDI.Rank")
names(gii)<-c("GII.Rank","Country","Gender.Ineq.I","Mat.Mort.I","Adol.Birth.R", "Parl.Rep.Prcnt","Sec.Edu.F","Sec.Edu.M","LabourForce.F","LabourForce.M")
#Two new variables to gii
#The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M).
#The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM).
gii$Sec.Edu.R<-with(gii,Sec.Edu.F/Sec.Edu.M)
gii$LabourForce.R<-with(gii,LabourForce.F/LabourForce.M)
summary(gii) #looks right
### Merging the above datasets making sure we only keep countries present in both data sets (all.x=F)
human<-merge(hd,gii,by="Country", all.x=F)
dim(human) #195 rows and 19 columns
names(human) #13 first variables the ones by which the merging was done. Columns 14:33 maths class versions of the other variables and 34:53 the por versions.
str(human) #characters,integers, and numeric variables.
View(human)
human2<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
View(human2)
View(human)
View(human2)
View(human)
View(human2)
write.table(human,"./human.txt",quote=F,sep="\t",row.names = F)
###Checking we can read it back in
human<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
### Explore the dimensions and stucture of the data
dim(hd); dim(gii) #both have 195 observations, hd has 8 variables and gii 10.
names(hd); names(gii) #Different variable names , but the linking variable seems to be Country
str(hd); str(gii) #mainly numeric variables
summary(hd);summary(gii) #all variables on different scales and some missing values
#Renaming the variables
names(hd)<-c("HDI.Rank","Country","HDI","Life.Exp","Eduyears.Exp", "EduAt.Mean","GNI","GNIminusHDI.Rank")
names(gii)<-c("GII.Rank","Country","Gender.Ineq.I","Mat.Mort.I","Adol.Birth.R", "Parl.Rep.Prcnt","Sec.Edu.F","Sec.Edu.M","LabourForce.F","LabourForce.M")
#Two new variables to gii
#The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M).
#The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM).
gii$Sec.Edu.R<-with(gii,Sec.Edu.F/Sec.Edu.M)
gii$LabourForce.R<-with(gii,LabourForce.F/LabourForce.M)
summary(gii) #looks right
### Merging the above datasets making sure we only keep countries present in both data sets (all.x=F)
human<-merge(hd,gii,by="Country", all.x=F)
dim(human) #195 rows and 19 columns
names(human) #13 first variables the ones by which the merging was done. Columns 14:33 maths class versions of the other variables and 34:53 the por versions.
str(human) #characters,integers, and numeric variables.
setwd("C:/HY-Data/JADWIGAB/PhD_FIMM/NotesOutsideTheOffice/Courses/OpenData2017/For_IODS/IODS-project/data")
getwd()
write.table(human,"./human2.txt",sep="\t",row.names = F)
human2<-read.table("./human2.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
dim(human) #129 x19
dim(human2) #129 x19
head(human2)
str(human2)
write.table(human,"./human.txt",sep="\t",row.names = F)
###Checking we can read it back in
human<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
dim(human)
head(human)
str(human) #perfect!
human<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
dim(human) #129 x19
head(human)
str(human)
str(human$GNI)
library(stringr)
# removing the commas from GNI and creatig a numeric version of it
human$GNI<-str_replace(human$GNI, pattern=",", replace ="")%>%as.numeric()
str(human$GNI)
names(gii)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(gii)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
### Explore the dimensions and stucture of the data
dim(hd); dim(gii) #both have 195 observations, hd has 8 variables and gii 10.
names(hd); names(gii) #Different variable names , but the linking variable seems to be Country
str(hd); str(gii) #mainly numeric variables
summary(hd);summary(gii) #all variables on different scales and some missing values
#Renaming the variables
names(hd)<-c("HDI.Rank","Country","HDI","Life.Exp","Eduyears.Exp", "EduAt.Mean","GNI","GNIminusHDI.Rank")
names(gii)<-c("GII.Rank","Country","Gender.Ineq.I","Mat.Mort.Ratio","Adol.Birth.Rate", "Parl.F.Prcnt","Sec.Edu.F","Sec.Edu.M","LabourForce.F","LabourForce.M")
#Two new variables to gii
#The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M).
#The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM).
gii$Sec.Edu.R<-with(gii,Sec.Edu.F/Sec.Edu.M)
gii$LabourForce.R<-with(gii,LabourForce.F/LabourForce.M)
summary(gii) #looks right
### Merging the above datasets making sure we only keep countries present in both data sets (all.x=F)
human<-merge(hd,gii,by="Country", all.x=F)
dim(human) #195 rows and 19 columns
names(human) #13 first variables the ones by which the merging was done. Columns 14:33 maths class versions of the other variables and 34:53 the por versions.
str(human) #characters,integers, and numeric variables.
###Saving the data!
write.table(human,"./human.txt",sep="\t",row.names = F)
###Checking we can read it back in
human<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
dim(human) #195 x 19
head(human)
str(human) #perfect!
####################################################################################################################################
#week 5
#Reading in the data we created last week
human<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
#checking the dimentions match those said on the mooc exercise pages i.e. 195 x 19
dim(human) #195 x19
head(human)
str(human) #based on head and str everything looks good.
# Transforming the Gross National Income (GNI) character variable to numeric Using string manipulation
# accessing the stringr package
library(stringr)
# removing the commas from GNI and creatig a numeric version of it
human$GNI<-str_replace(human$GNI, pattern=",", replace ="")%>%as.numeric()
str(human$GNI) #now it is numeric!:)
names(human)
keep<-c("Country", "Sec.Edu.R", "LabourForce.R", "Eduyears.Exp", "Life.Exp", "GNI", "Mat.Mort.Ratio", "Adol.Birth.Rate", "Parl.F.Prcnt")
human <- select(human, one_of(keep))
human<- filter(human, complete.cases(human))
tail(human,n=10)
tail(human2,n=10)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
tail(gii,n=10)
tail(hd,n=10)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
### Explore the dimensions and stucture of the data
dim(hd); dim(gii) #both have 195 observations, hd has 8 variables and gii 10.
names(hd); names(gii) #Different variable names , but the linking variable seems to be Country
str(hd); str(gii) #mainly numeric variables
summary(hd);summary(gii) #all variables on different scales and some missing values
#Renaming the variables
names(hd)<-c("HDI.Rank","Country","HDI","Life.Exp","Eduyears.Exp", "EduAt.Mean","GNI","GNIminusHDI.Rank")
names(gii)<-c("GII.Rank","Country","Gender.Ineq.I","Mat.Mort.Ratio","Adol.Birth.Rate", "Parl.F.Prcnt","Sec.Edu.F","Sec.Edu.M","LabourForce.F","LabourForce.M")
#Two new variables to gii
#The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M).
#The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM).
gii$Sec.Edu.R<-with(gii,Sec.Edu.F/Sec.Edu.M)
gii$LabourForce.R<-with(gii,LabourForce.F/LabourForce.M)
summary(gii) #looks right
### Merging the above datasets making sure we keep the ordering of rows to that of data set hd
human<-merge(hd,gii,by="Country", all.x=T)
dim(human) #195 rows and 19 columns
names(human) #13 first variables the ones by which the merging was done. Columns 14:33 maths class versions of the other variables and 34:53 the por versions.
str(human) #characters,integers, and numeric variables.
tail(human,n=10)
human<-merge(hd,gii,by="Country", all.x=T,sort=F)
tail(human,n=10)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
### Explore the dimensions and stucture of the data
dim(hd); dim(gii) #both have 195 observations, hd has 8 variables and gii 10.
names(hd); names(gii) #Different variable names , but the linking variable seems to be Country
str(hd); str(gii) #mainly numeric variables
summary(hd);summary(gii) #all variables on different scales and some missing values
#Renaming the variables
names(hd)<-c("HDI.Rank","Country","HDI","Life.Exp","Eduyears.Exp", "EduAt.Mean","GNI","GNIminusHDI.Rank")
names(gii)<-c("GII.Rank","Country","Gender.Ineq.I","Mat.Mort.Ratio","Adol.Birth.Rate", "Parl.F.Prcnt","Sec.Edu.F","Sec.Edu.M","LabourForce.F","LabourForce.M")
#Two new variables to gii
#The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M).
#The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM).
gii$Sec.Edu.R<-with(gii,Sec.Edu.F/Sec.Edu.M)
gii$LabourForce.R<-with(gii,LabourForce.F/LabourForce.M)
summary(gii) #looks right
### Merging the above datasets making sure we keep ony the countries present in both datasets ad the ordering of rows to that of data set hd
human<-merge(hd,gii,by="Country", all.x=F,sort=F)
dim(human) #195 rows and 19 columns
names(human) #13 first variables the ones by which the merging was done. Columns 14:33 maths class versions of the other variables and 34:53 the por versions.
str(human) #characters,integers, and numeric variables.
tail(human,n=10)
###Saving the data!
write.table(human,"./human.txt",sep="\t",row.names = F)
###Checking we can read it back in
human<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
dim(human) #195 x 19
head(human)
str(human) #perfect!
####################################################################################################################################
#week 5
#Reading in the data we created last week
human<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
#checking the dimentions match those said on the mooc exercise pages i.e. 195 x 19
dim(human) #195 x19
head(human)
str(human) #based on head and str everything looks good.
names(human)
# Transforming the Gross National Income (GNI) character variable to numeric Using string manipulation
# accessing the stringr package
library(stringr)
# removing the commas from GNI and creatig a numeric version of it
human$GNI<-str_replace(human$GNI, pattern=",", replace ="")%>%as.numeric()
str(human$GNI) #now it is numeric!:)
#keeping only some variables
keep<-c("Country", "Sec.Edu.R", "LabourForce.R", "Eduyears.Exp", "Life.Exp", "GNI", "Mat.Mort.Ratio", "Adol.Birth.Rate", "Parl.F.Prcnt")
# select the 'keep' columns
human <- select(human, one_of(keep)) #now we only have 9 variables as opposed to the original 19
#removing all rows with missing values
human<- filter(human, complete.cases(human)) #we now just have 162 observations as opposed to the 195
tail(hd,n=10)
tail(human,n=10)
rownames(human) <- human$Country
human<-select(human,-Country)
View(human)
tail(human,n=10)
last <- nrow(human) - 7 #Define the last indice we want to keep
human_ <- human[1:last, ] # choose everything until the last 7 observations
View(human_)
# looking at the last 10 observations of human we notice that the 7 last observations concern regions, not countries
tail(human,n=10)
last <- nrow(human) - 7 #Define the last indice we want to keep
human<- human[1:last, ] # choose everything until the last 7 observations
dim(human)
write.table(human,"./human.txt",sep="\t",row.names = T) #we overwrite the week 4 version of it
human<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
View(human)
dim(human) #195 x 19
head(human)
str(human) #perfect!
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
### Explore the dimensions and stucture of the data
dim(hd); dim(gii) #both have 195 observations, hd has 8 variables and gii 10.
names(hd); names(gii) #Different variable names , but the linking variable seems to be Country
str(hd); str(gii) #mainly numeric variables
summary(hd);summary(gii) #all variables on different scales and some missing values
#Renaming the variables
names(hd)<-c("HDI.Rank","Country","HDI","Life.Exp","Eduyears.Exp", "EduAt.Mean","GNI","GNIminusHDI.Rank")
names(gii)<-c("GII.Rank","Country","Gender.Ineq.I","Mat.Mort.Ratio","Adol.Birth.Rate", "Parl.F.Prcnt","Sec.Edu.F","Sec.Edu.M","LabourForce.F","LabourForce.M")
#Two new variables to gii
#The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M).
#The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM).
gii$Sec.Edu.FMRatio<-with(gii,Sec.Edu.F/Sec.Edu.M)
gii$LabourForce.FMRatio<-with(gii,LabourForce.F/LabourForce.M)
summary(gii) #looks right
### Merging the above datasets making sure we keep ony the countries present in both datasets ad the ordering of rows to that of data set hd
human<-merge(hd,gii,by="Country", all.x=F,sort=F)
dim(human) #195 rows and 19 columns
names(human) #13 first variables the ones by which the merging was done. Columns 14:33 maths class versions of the other variables and 34:53 the por versions.
str(human) #characters,integers, and numeric variables.
tail(human,n=10)
###Saving the data!
write.table(human,"./human.txt",sep="\t",row.names = F)
###Checking we can read it back in
human<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
dim(human) #195 x 19
head(human)
str(human) #perfect!
####################################################################################################################################
#week 5
#Reading in the data we created last week
human<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
#checking the dimentions match those said on the mooc exercise pages i.e. 195 x 19
dim(human) #195 x19
head(human)
str(human) #based on head and str everything looks good.
# Transforming the Gross National Income (GNI) character variable to numeric Using string manipulation
library(stringr) # accessing the stringr package
human$GNI<-str_replace(human$GNI, pattern=",", replace ="")%>%as.numeric() # removing the commas from GNI and creatig a numeric version of it
str(human$GNI) #now it is numeric!:)
#keeping only some variables
names(human)
keep<-c("Country", "Sec.Edu.FMRatio", "LabourForce.FMRatio", "Eduyears.Exp", "Life.Exp", "GNI", "Mat.Mort.Ratio", "Adol.Birth.Rate", "Parl.F.Prcnt")
human <- select(human, one_of(keep)) # select the 'keep' columns
dim(human) #now we only have 9 variables as opposed to the original 19
#removing all rows with missing values
human<- filter(human, complete.cases(human)); dim(human) #we now just have 162 observations as opposed to the 195
# We remove the observations concerning regions.
# looking at the last 10 observations of human we notice that the 7 last observations concern regions, not countries
tail(human,n=10)
last <- nrow(human) - 7 #Define the last indice we want to keep
human<- human[1:last, ] # choose everything until the last 7 observations
# we add countries as rownames
rownames(human) <- human$Country
#We delete the country column
human<-select(human,-Country)
dim(human) #155 x 8
#now we save the human data, which no longer has any missing values, regions, the country variable other than in the rownames and only includes 9 variables
###Saving the data!
write.table(human,"./human.txt",sep="\t",row.names = T) #we overwrite the week 4 version of it
###Checking we can read it back in
human<-read.table("./human.txt",sep="\t", header=T, dec=".",stringsAsFactors = FALSE)
dim(human) #155 x 8
head(human)
str(human) #
human_std <- scale(human)
summary(human_std)
class(human_std)
uman_std <- scale(human)
# print out summaries of the standardized variables
summary(human_std)
class(human_std)
# perform principal component analysis (with the SVD method)
pca_human <- prcomp(human_std)
